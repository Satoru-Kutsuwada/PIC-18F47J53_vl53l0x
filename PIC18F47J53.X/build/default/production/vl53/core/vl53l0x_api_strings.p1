Version 4.0 HI-TECH Software Intermediate Code
"240 ./vl53/core\vl53l0x_def.h
[s S3 `ul -> 7 `i `ul -> 7 `i ]
[n S3 . ambRate_mcps dmax_mm ]
"249
[s S4 `uc 1 `uc 1 `ul 1 `ul 1 `uc 1 `us 1 `ul 1 `l 1 `uc -> 6 `i `uc -> 6 `i `ul -> 6 `i `S3 1 `uc 1 ]
[n S4 . DeviceMode HistogramMode MeasurementTimingBudgetMicroSeconds InterMeasurementPeriodMilliSeconds XTalkCompensationEnable XTalkCompensationRangeMilliMeter XTalkCompensationRateMegaCps RangeOffsetMicroMeters LimitChecksEnable LimitChecksStatus LimitChecksValue dmax_lut WrapAroundCheckEnable ]
"322
[s S5 `ul 1 `ul 1 `us 1 `us 1 `ul 1 `ul 1 `us 1 `uc 1 `uc 1 `uc 1 ]
[n S5 . TimeStamp MeasurementTimeUsec RangeMilliMeter RangeDMaxMilliMeter SignalRateRtnMegaCps AmbientRateRtnMegaCps EffectiveSpadRtnCount ZoneId RangeFractionalPart RangeStatus ]
"376
[s S6 `ul -> 24 `i `uc 1 `uc 1 `uc 1 `uc 1 ]
[n S6 . HistogramData FirstBin BufferSize NumberOfBins ErrorStatus ]
"407
[s S8 `ul 1 `us 1 `uc 1 `ul 1 `uc 1 `ul 1 `uc 1 `us 1 `us 1 `us 1 `uc 1 `uc 1 `uc 1 `uc -> 32 `i `uc 1 `uc 1 `uc 1 `ul 1 `ul 1 `ul 1 ]
[n S8 . OscFrequencyMHz LastEncodedTimeout Pin0GpioFunctionality FinalRangeTimeoutMicroSecs FinalRangeVcselPulsePeriod PreRangeTimeoutMicroSecs PreRangeVcselPulsePeriod SigmaEstRefArray SigmaEstEffPulseWidth SigmaEstEffAmbWidth ReadDataFromDeviceDone ModuleId Revision ProductId ReferenceSpadCount ReferenceSpadType RefSpadsInitialised PartUIDUpper PartUIDLower SignalRateMeasFixed400mm ]
"400
[s S7 `uc -> 6 `i `uc -> 6 `i ]
[n S7 . RefSpadEnables RefGoodSpadMap ]
"461
[s S9 `l 1 `l 1 `S4 1 `S5 1 `S6 1 `S8 1 `S7 1 `uc 1 `uc 1 `uc 1 `uc 1 `us 1 `us 1 `us 1 `uc 1 `us 1 `ul 1 `ul 1 `ul 1 `*uc 1 `uc 1 `us 1 ]
[n S9 . Part2PartOffsetNVMMicroMeter Part2PartOffsetAdjustmentNVMMicroMeter CurrentParameters LastRangeMeasure LastHistogramMeasure DeviceSpecificParameters SpadData SequenceConfig RangeFractionalEnable PalState PowerMode SigmaEstRefArray SigmaEstEffPulseWidth SigmaEstEffAmbWidth StopVariable targetRefRate SigmaEstimate SignalEstimate LastSignalRefMcps pTuningSettingsPointer UseInternalTuningSettings LinearityCorrectiveGain ]
"58 ./vl53/platform\vl53l0x_platform.h
[; ;./vl53/platform\vl53l0x_platform.h: 58: typedef struct {
[s S14 `S9 1 `uc 1 ]
[n S14 . Data I2cDevAddr ]
"110 ./vl53/core\vl53l0x_def.h
[s S2 `uc -> 32 `i `uc -> 32 `i `uc -> 32 `i `uc 1 `uc 1 `uc 1 ]
[n S2 . Name Type ProductId ProductType ProductRevisionMajor ProductRevisionMinor ]
"44 vl53/core/vl53l0x_api_strings.c
[; ;vl53/core/vl53l0x_api_strings.c: 44: VL53L0X_Error VL53L0X_get_info_from_device(VL53L0X_DEV Dev, uint8_t option);
[v _VL53L0X_get_info_from_device `(c ~T0 @X0 0 ef2`*S14`uc ]
"33 C:\Program Files\Microchip\xc8\v2.41\pic\include\c99\string.h
[; ;C:\Program Files\Microchip\xc8\v2.41\pic\include\c99\string.h: 33: char *strcpy (char *restrict, const char *restrict);
[v _strcpy `(*uc ~T0 @X0 0 ef2`*uc`*Cuc ]
"179 ./vl53/platform\vl53l0x_platform.h
[; ;./vl53/platform\vl53l0x_platform.h: 179: VL53L0X_Error VL53L0X_RdByte(VL53L0X_DEV Dev, uint8_t index, uint8_t *data);
[v _VL53L0X_RdByte `(c ~T0 @X0 0 ef3`*S14`uc`*uc ]
"47 vl53/core/vl53l0x_api_strings.c
[; ;vl53/core/vl53l0x_api_strings.c: 47: VL53L0X_Error VL53L0X_check_part_used(VL53L0X_DEV Dev,
[v _VL53L0X_check_part_used `(c ~T0 @X0 1 ef3`*S14`*uc`*S2 ]
"50
[; ;vl53/core/vl53l0x_api_strings.c: 50: {
{
[e :U _VL53L0X_check_part_used ]
"47
[; ;vl53/core/vl53l0x_api_strings.c: 47: VL53L0X_Error VL53L0X_check_part_used(VL53L0X_DEV Dev,
[v _Dev `*S14 ~T0 @X0 1 r1 ]
"48
[; ;vl53/core/vl53l0x_api_strings.c: 48:   uint8_t *Revision,
[v _Revision `*uc ~T0 @X0 1 r2 ]
"49
[; ;vl53/core/vl53l0x_api_strings.c: 49:   VL53L0X_DeviceInfo_t *pVL53L0X_DeviceInfo)
[v _pVL53L0X_DeviceInfo `*S2 ~T0 @X0 1 r3 ]
"50
[; ;vl53/core/vl53l0x_api_strings.c: 50: {
[f ]
"51
[; ;vl53/core/vl53l0x_api_strings.c: 51:  VL53L0X_Error Status = ((VL53L0X_Error) 0);
[v _Status `c ~T0 @X0 1 a ]
[e = _Status -> -> 0 `i `c ]
"52
[; ;vl53/core/vl53l0x_api_strings.c: 52:  uint8_t ModuleIdInt;
[v _ModuleIdInt `uc ~T0 @X0 1 a ]
"53
[; ;vl53/core/vl53l0x_api_strings.c: 53:  char *ProductId_tmp;
[v _ProductId_tmp `*uc ~T0 @X0 1 a ]
"55
[; ;vl53/core/vl53l0x_api_strings.c: 55:  (void)0;
[e -> 0 `i ]
"57
[; ;vl53/core/vl53l0x_api_strings.c: 57:  Status = VL53L0X_get_info_from_device(Dev, 2);
[e = _Status ( _VL53L0X_get_info_from_device (2 , _Dev -> -> 2 `i `uc ]
"59
[; ;vl53/core/vl53l0x_api_strings.c: 59:  if (Status == ((VL53L0X_Error) 0)) {
[e $ ! == -> _Status `i -> -> -> 0 `i `c `i 21  ]
{
"60
[; ;vl53/core/vl53l0x_api_strings.c: 60:   ModuleIdInt = (Dev->Data.DeviceSpecificParameters).ModuleId;
[e = _ModuleIdInt . . . *U _Dev 0 5 11 ]
"62
[; ;vl53/core/vl53l0x_api_strings.c: 62:  if (ModuleIdInt == 0) {
[e $ ! == -> _ModuleIdInt `i -> 0 `i 22  ]
{
"63
[; ;vl53/core/vl53l0x_api_strings.c: 63:   *Revision = 0;
[e = *U _Revision -> -> 0 `i `uc ]
"64
[; ;vl53/core/vl53l0x_api_strings.c: 64:   strcpy(pVL53L0X_DeviceInfo->ProductId, "");
[e ( _strcpy (2 , &U . *U _pVL53L0X_DeviceInfo 2 :s 1C ]
"65
[; ;vl53/core/vl53l0x_api_strings.c: 65:  } else {
}
[e $U 23  ]
[e :U 22 ]
{
"66
[; ;vl53/core/vl53l0x_api_strings.c: 66:   *Revision = (Dev->Data.DeviceSpecificParameters).Revision;
[e = *U _Revision . . . *U _Dev 0 5 12 ]
"67
[; ;vl53/core/vl53l0x_api_strings.c: 67:   ProductId_tmp = (Dev->Data.DeviceSpecificParameters).ProductId;
[e = _ProductId_tmp &U . . . *U _Dev 0 5 13 ]
"69
[; ;vl53/core/vl53l0x_api_strings.c: 69:   strcpy(pVL53L0X_DeviceInfo->ProductId, ProductId_tmp);
[e ( _strcpy (2 , &U . *U _pVL53L0X_DeviceInfo 2 -> _ProductId_tmp `*Cuc ]
"71
[; ;vl53/core/vl53l0x_api_strings.c: 71:  }
}
[e :U 23 ]
"72
[; ;vl53/core/vl53l0x_api_strings.c: 72:  }
}
[e :U 21 ]
"74
[; ;vl53/core/vl53l0x_api_strings.c: 74:  (void)0;
[e -> 0 `i ]
"75
[; ;vl53/core/vl53l0x_api_strings.c: 75:  return Status;
[e ) _Status ]
[e $UE 20  ]
"76
[; ;vl53/core/vl53l0x_api_strings.c: 76: }
[e :UE 20 ]
}
"79
[; ;vl53/core/vl53l0x_api_strings.c: 79: VL53L0X_Error VL53L0X_get_device_info(VL53L0X_DEV Dev,
[v _VL53L0X_get_device_info `(c ~T0 @X0 1 ef2`*S14`*S2 ]
"81
[; ;vl53/core/vl53l0x_api_strings.c: 81: {
{
[e :U _VL53L0X_get_device_info ]
"79
[; ;vl53/core/vl53l0x_api_strings.c: 79: VL53L0X_Error VL53L0X_get_device_info(VL53L0X_DEV Dev,
[v _Dev `*S14 ~T0 @X0 1 r1 ]
"80
[; ;vl53/core/vl53l0x_api_strings.c: 80:     VL53L0X_DeviceInfo_t *pVL53L0X_DeviceInfo)
[v _pVL53L0X_DeviceInfo `*S2 ~T0 @X0 1 r2 ]
"81
[; ;vl53/core/vl53l0x_api_strings.c: 81: {
[f ]
"82
[; ;vl53/core/vl53l0x_api_strings.c: 82:  VL53L0X_Error Status = ((VL53L0X_Error) 0);
[v _Status `c ~T0 @X0 1 a ]
[e = _Status -> -> 0 `i `c ]
"83
[; ;vl53/core/vl53l0x_api_strings.c: 83:  uint8_t revision_id;
[v _revision_id `uc ~T0 @X0 1 a ]
"84
[; ;vl53/core/vl53l0x_api_strings.c: 84:  uint8_t Revision;
[v _Revision `uc ~T0 @X0 1 a ]
"86
[; ;vl53/core/vl53l0x_api_strings.c: 86:  Status = VL53L0X_check_part_used(Dev, &Revision, pVL53L0X_DeviceInfo);
[e = _Status ( _VL53L0X_check_part_used (3 , , _Dev &U _Revision _pVL53L0X_DeviceInfo ]
"88
[; ;vl53/core/vl53l0x_api_strings.c: 88:  if (Status == ((VL53L0X_Error) 0)) {
[e $ ! == -> _Status `i -> -> -> 0 `i `c `i 25  ]
{
"89
[; ;vl53/core/vl53l0x_api_strings.c: 89:   if (Revision == 0) {
[e $ ! == -> _Revision `i -> 0 `i 26  ]
{
"90
[; ;vl53/core/vl53l0x_api_strings.c: 90:    strcpy(pVL53L0X_DeviceInfo->Name, "VL53L0X TS0");
[e ( _strcpy (2 , &U . *U _pVL53L0X_DeviceInfo 0 :s 2C ]
"92
[; ;vl53/core/vl53l0x_api_strings.c: 92:   } else if ((Revision <= 34) && (Revision != 32)) {
}
[e $U 27  ]
[e :U 26 ]
[e $ ! && <= -> _Revision `i -> 34 `i != -> _Revision `i -> 32 `i 28  ]
{
"93
[; ;vl53/core/vl53l0x_api_strings.c: 93:    strcpy(pVL53L0X_DeviceInfo->Name, "VL53L0X TS1");
[e ( _strcpy (2 , &U . *U _pVL53L0X_DeviceInfo 0 :s 3C ]
"95
[; ;vl53/core/vl53l0x_api_strings.c: 95:   } else if (Revision < 39) {
}
[e $U 29  ]
[e :U 28 ]
[e $ ! < -> _Revision `i -> 39 `i 30  ]
{
"96
[; ;vl53/core/vl53l0x_api_strings.c: 96:    strcpy(pVL53L0X_DeviceInfo->Name, "VL53L0X TS2");
[e ( _strcpy (2 , &U . *U _pVL53L0X_DeviceInfo 0 :s 4C ]
"98
[; ;vl53/core/vl53l0x_api_strings.c: 98:   } else {
}
[e $U 31  ]
[e :U 30 ]
{
"99
[; ;vl53/core/vl53l0x_api_strings.c: 99:    strcpy(pVL53L0X_DeviceInfo->Name, "VL53L0X ES1 or later");
[e ( _strcpy (2 , &U . *U _pVL53L0X_DeviceInfo 0 :s 5C ]
"101
[; ;vl53/core/vl53l0x_api_strings.c: 101:   }
}
[e :U 31 ]
[e :U 29 ]
[e :U 27 ]
"103
[; ;vl53/core/vl53l0x_api_strings.c: 103:   strcpy(pVL53L0X_DeviceInfo->Type, "VL53L0X");
[e ( _strcpy (2 , &U . *U _pVL53L0X_DeviceInfo 1 :s 6C ]
"106
[; ;vl53/core/vl53l0x_api_strings.c: 106:  }
}
[e :U 25 ]
"108
[; ;vl53/core/vl53l0x_api_strings.c: 108:  if (Status == ((VL53L0X_Error) 0)) {
[e $ ! == -> _Status `i -> -> -> 0 `i `c `i 32  ]
{
"109
[; ;vl53/core/vl53l0x_api_strings.c: 109:   Status = VL53L0X_RdByte(Dev,
[e = _Status ( _VL53L0X_RdByte (3 , , _Dev -> -> 192 `i `uc &U . *U _pVL53L0X_DeviceInfo 3 ]
"112
[; ;vl53/core/vl53l0x_api_strings.c: 112:  }
}
[e :U 32 ]
"114
[; ;vl53/core/vl53l0x_api_strings.c: 114:  if (Status == ((VL53L0X_Error) 0)) {
[e $ ! == -> _Status `i -> -> -> 0 `i `c `i 33  ]
{
"115
[; ;vl53/core/vl53l0x_api_strings.c: 115:   Status = VL53L0X_RdByte(Dev,
[e = _Status ( _VL53L0X_RdByte (3 , , _Dev -> -> 194 `i `uc &U _revision_id ]
"118
[; ;vl53/core/vl53l0x_api_strings.c: 118:   pVL53L0X_DeviceInfo->ProductRevisionMajor = 1;
[e = . *U _pVL53L0X_DeviceInfo 4 -> -> 1 `i `uc ]
"119
[; ;vl53/core/vl53l0x_api_strings.c: 119:   pVL53L0X_DeviceInfo->ProductRevisionMinor =
[e = . *U _pVL53L0X_DeviceInfo 5 -> >> & -> _revision_id `i -> 240 `i -> 4 `i `uc ]
"121
[; ;vl53/core/vl53l0x_api_strings.c: 121:  }
}
[e :U 33 ]
"123
[; ;vl53/core/vl53l0x_api_strings.c: 123:  return Status;
[e ) _Status ]
[e $UE 24  ]
"124
[; ;vl53/core/vl53l0x_api_strings.c: 124: }
[e :UE 24 ]
}
"207
[; ;vl53/core/vl53l0x_api_strings.c: 207: VL53L0X_Error VL53L0X_get_range_status_string(uint8_t RangeStatus,
[v _VL53L0X_get_range_status_string `(c ~T0 @X0 1 ef2`uc`*uc ]
"209
[; ;vl53/core/vl53l0x_api_strings.c: 209: {
{
[e :U _VL53L0X_get_range_status_string ]
"207
[; ;vl53/core/vl53l0x_api_strings.c: 207: VL53L0X_Error VL53L0X_get_range_status_string(uint8_t RangeStatus,
[v _RangeStatus `uc ~T0 @X0 1 r1 ]
"208
[; ;vl53/core/vl53l0x_api_strings.c: 208:   char *pRangeStatusString)
[v _pRangeStatusString `*uc ~T0 @X0 1 r2 ]
"209
[; ;vl53/core/vl53l0x_api_strings.c: 209: {
[f ]
"210
[; ;vl53/core/vl53l0x_api_strings.c: 210:  VL53L0X_Error Status = ((VL53L0X_Error) 0);
[v _Status `c ~T0 @X0 1 a ]
[e = _Status -> -> 0 `i `c ]
"212
[; ;vl53/core/vl53l0x_api_strings.c: 212:  (void)0;
[e -> 0 `i ]
"214
[; ;vl53/core/vl53l0x_api_strings.c: 214:  switch (RangeStatus) {
[e $U 36  ]
{
"215
[; ;vl53/core/vl53l0x_api_strings.c: 215:  case 0:
[e :U 37 ]
"216
[; ;vl53/core/vl53l0x_api_strings.c: 216:   strcpy(pRangeStatusString, "Range Valid");
[e ( _strcpy (2 , _pRangeStatusString :s 7C ]
"218
[; ;vl53/core/vl53l0x_api_strings.c: 218:  break;
[e $U 35  ]
"219
[; ;vl53/core/vl53l0x_api_strings.c: 219:  case 1:
[e :U 38 ]
"220
[; ;vl53/core/vl53l0x_api_strings.c: 220:   strcpy(pRangeStatusString, "Sigma Fail");
[e ( _strcpy (2 , _pRangeStatusString :s 8C ]
"222
[; ;vl53/core/vl53l0x_api_strings.c: 222:  break;
[e $U 35  ]
"223
[; ;vl53/core/vl53l0x_api_strings.c: 223:  case 2:
[e :U 39 ]
"224
[; ;vl53/core/vl53l0x_api_strings.c: 224:   strcpy(pRangeStatusString, "Signal Fail");
[e ( _strcpy (2 , _pRangeStatusString :s 9C ]
"226
[; ;vl53/core/vl53l0x_api_strings.c: 226:  break;
[e $U 35  ]
"227
[; ;vl53/core/vl53l0x_api_strings.c: 227:  case 3:
[e :U 40 ]
"228
[; ;vl53/core/vl53l0x_api_strings.c: 228:   strcpy(pRangeStatusString, "Min Range Fail");
[e ( _strcpy (2 , _pRangeStatusString :s 10C ]
"230
[; ;vl53/core/vl53l0x_api_strings.c: 230:  break;
[e $U 35  ]
"231
[; ;vl53/core/vl53l0x_api_strings.c: 231:  case 4:
[e :U 41 ]
"232
[; ;vl53/core/vl53l0x_api_strings.c: 232:   strcpy(pRangeStatusString, "Phase Fail");
[e ( _strcpy (2 , _pRangeStatusString :s 11C ]
"234
[; ;vl53/core/vl53l0x_api_strings.c: 234:  break;
[e $U 35  ]
"235
[; ;vl53/core/vl53l0x_api_strings.c: 235:  case 5:
[e :U 42 ]
"236
[; ;vl53/core/vl53l0x_api_strings.c: 236:   strcpy(pRangeStatusString, "Hardware Fail");
[e ( _strcpy (2 , _pRangeStatusString :s 12C ]
"238
[; ;vl53/core/vl53l0x_api_strings.c: 238:  break;
[e $U 35  ]
"240
[; ;vl53/core/vl53l0x_api_strings.c: 240:  default:
[e :U 43 ]
"241
[; ;vl53/core/vl53l0x_api_strings.c: 241:   strcpy(pRangeStatusString, "No Update");
[e ( _strcpy (2 , _pRangeStatusString :s 13C ]
"243
[; ;vl53/core/vl53l0x_api_strings.c: 243:  }
}
[e $U 35  ]
[e :U 36 ]
[e [\ -> _RangeStatus `i , $ -> 0 `i 37
 , $ -> 1 `i 38
 , $ -> 2 `i 39
 , $ -> 3 `i 40
 , $ -> 4 `i 41
 , $ -> 5 `i 42
 43 ]
[e :U 35 ]
"245
[; ;vl53/core/vl53l0x_api_strings.c: 245:  (void)0;
[e -> 0 `i ]
"246
[; ;vl53/core/vl53l0x_api_strings.c: 246:  return Status;
[e ) _Status ]
[e $UE 34  ]
"247
[; ;vl53/core/vl53l0x_api_strings.c: 247: }
[e :UE 34 ]
}
"249
[; ;vl53/core/vl53l0x_api_strings.c: 249: VL53L0X_Error VL53L0X_get_pal_error_string(VL53L0X_Error PalErrorCode,
[v _VL53L0X_get_pal_error_string `(c ~T0 @X0 1 ef2`c`*uc ]
"251
[; ;vl53/core/vl53l0x_api_strings.c: 251: {
{
[e :U _VL53L0X_get_pal_error_string ]
"249
[; ;vl53/core/vl53l0x_api_strings.c: 249: VL53L0X_Error VL53L0X_get_pal_error_string(VL53L0X_Error PalErrorCode,
[v _PalErrorCode `c ~T0 @X0 1 r1 ]
"250
[; ;vl53/core/vl53l0x_api_strings.c: 250:   char *pPalErrorString)
[v _pPalErrorString `*uc ~T0 @X0 1 r2 ]
"251
[; ;vl53/core/vl53l0x_api_strings.c: 251: {
[f ]
"252
[; ;vl53/core/vl53l0x_api_strings.c: 252:  VL53L0X_Error Status = ((VL53L0X_Error) 0);
[v _Status `c ~T0 @X0 1 a ]
[e = _Status -> -> 0 `i `c ]
"254
[; ;vl53/core/vl53l0x_api_strings.c: 254:  (void)0;
[e -> 0 `i ]
"256
[; ;vl53/core/vl53l0x_api_strings.c: 256:  switch (PalErrorCode) {
[e $U 46  ]
{
"257
[; ;vl53/core/vl53l0x_api_strings.c: 257:  case ((VL53L0X_Error) 0):
[e :U 47 ]
"258
[; ;vl53/core/vl53l0x_api_strings.c: 258:   strcpy(pPalErrorString, "No Error");
[e ( _strcpy (2 , _pPalErrorString :s 14C ]
"260
[; ;vl53/core/vl53l0x_api_strings.c: 260:  break;
[e $U 45  ]
"261
[; ;vl53/core/vl53l0x_api_strings.c: 261:  case ((VL53L0X_Error) - 1):
[e :U 48 ]
"262
[; ;vl53/core/vl53l0x_api_strings.c: 262:   strcpy(pPalErrorString, "Calibration Warning Error");
[e ( _strcpy (2 , _pPalErrorString :s 15C ]
"264
[; ;vl53/core/vl53l0x_api_strings.c: 264:  break;
[e $U 45  ]
"265
[; ;vl53/core/vl53l0x_api_strings.c: 265:  case ((VL53L0X_Error) - 2):
[e :U 49 ]
"266
[; ;vl53/core/vl53l0x_api_strings.c: 266:   strcpy(pPalErrorString, "Min clipped error");
[e ( _strcpy (2 , _pPalErrorString :s 16C ]
"268
[; ;vl53/core/vl53l0x_api_strings.c: 268:  break;
[e $U 45  ]
"269
[; ;vl53/core/vl53l0x_api_strings.c: 269:  case ((VL53L0X_Error) - 3):
[e :U 50 ]
"270
[; ;vl53/core/vl53l0x_api_strings.c: 270:   strcpy(pPalErrorString, "Undefined error");
[e ( _strcpy (2 , _pPalErrorString :s 17C ]
"272
[; ;vl53/core/vl53l0x_api_strings.c: 272:  break;
[e $U 45  ]
"273
[; ;vl53/core/vl53l0x_api_strings.c: 273:  case ((VL53L0X_Error) - 4):
[e :U 51 ]
"274
[; ;vl53/core/vl53l0x_api_strings.c: 274:   strcpy(pPalErrorString, "Invalid parameters error");
[e ( _strcpy (2 , _pPalErrorString :s 18C ]
"276
[; ;vl53/core/vl53l0x_api_strings.c: 276:  break;
[e $U 45  ]
"277
[; ;vl53/core/vl53l0x_api_strings.c: 277:  case ((VL53L0X_Error) - 5):
[e :U 52 ]
"278
[; ;vl53/core/vl53l0x_api_strings.c: 278:   strcpy(pPalErrorString, "Not supported error");
[e ( _strcpy (2 , _pPalErrorString :s 19C ]
"280
[; ;vl53/core/vl53l0x_api_strings.c: 280:  break;
[e $U 45  ]
"281
[; ;vl53/core/vl53l0x_api_strings.c: 281:  case ((VL53L0X_Error) - 12):
[e :U 53 ]
"282
[; ;vl53/core/vl53l0x_api_strings.c: 282:   strcpy(pPalErrorString, "Interrupt not Cleared");
[e ( _strcpy (2 , _pPalErrorString :s 20C ]
"284
[; ;vl53/core/vl53l0x_api_strings.c: 284:  break;
[e $U 45  ]
"285
[; ;vl53/core/vl53l0x_api_strings.c: 285:  case ((VL53L0X_Error) - 6):
[e :U 54 ]
"286
[; ;vl53/core/vl53l0x_api_strings.c: 286:   strcpy(pPalErrorString, "Range error");
[e ( _strcpy (2 , _pPalErrorString :s 21C ]
"288
[; ;vl53/core/vl53l0x_api_strings.c: 288:  break;
[e $U 45  ]
"289
[; ;vl53/core/vl53l0x_api_strings.c: 289:  case ((VL53L0X_Error) - 7):
[e :U 55 ]
"290
[; ;vl53/core/vl53l0x_api_strings.c: 290:   strcpy(pPalErrorString, "Time out error");
[e ( _strcpy (2 , _pPalErrorString :s 22C ]
"292
[; ;vl53/core/vl53l0x_api_strings.c: 292:  break;
[e $U 45  ]
"293
[; ;vl53/core/vl53l0x_api_strings.c: 293:  case ((VL53L0X_Error) - 8):
[e :U 56 ]
"294
[; ;vl53/core/vl53l0x_api_strings.c: 294:   strcpy(pPalErrorString, "Mode not supported error");
[e ( _strcpy (2 , _pPalErrorString :s 23C ]
"296
[; ;vl53/core/vl53l0x_api_strings.c: 296:  break;
[e $U 45  ]
"297
[; ;vl53/core/vl53l0x_api_strings.c: 297:  case ((VL53L0X_Error) - 9):
[e :U 57 ]
"298
[; ;vl53/core/vl53l0x_api_strings.c: 298:   strcpy(pPalErrorString, "Buffer too small");
[e ( _strcpy (2 , _pPalErrorString :s 24C ]
"300
[; ;vl53/core/vl53l0x_api_strings.c: 300:  break;
[e $U 45  ]
"301
[; ;vl53/core/vl53l0x_api_strings.c: 301:  case ((VL53L0X_Error) - 10):
[e :U 58 ]
"302
[; ;vl53/core/vl53l0x_api_strings.c: 302:   strcpy(pPalErrorString, "GPIO not existing");
[e ( _strcpy (2 , _pPalErrorString :s 25C ]
"304
[; ;vl53/core/vl53l0x_api_strings.c: 304:  break;
[e $U 45  ]
"305
[; ;vl53/core/vl53l0x_api_strings.c: 305:  case ((VL53L0X_Error) - 11):
[e :U 59 ]
"306
[; ;vl53/core/vl53l0x_api_strings.c: 306:   strcpy(pPalErrorString, "GPIO funct not supported");
[e ( _strcpy (2 , _pPalErrorString :s 26C ]
"308
[; ;vl53/core/vl53l0x_api_strings.c: 308:  break;
[e $U 45  ]
"309
[; ;vl53/core/vl53l0x_api_strings.c: 309:  case ((VL53L0X_Error) - 20):
[e :U 60 ]
"310
[; ;vl53/core/vl53l0x_api_strings.c: 310:   strcpy(pPalErrorString, "Control Interface Error");
[e ( _strcpy (2 , _pPalErrorString :s 27C ]
"312
[; ;vl53/core/vl53l0x_api_strings.c: 312:  break;
[e $U 45  ]
"313
[; ;vl53/core/vl53l0x_api_strings.c: 313:  case ((VL53L0X_Error) - 30):
[e :U 61 ]
"314
[; ;vl53/core/vl53l0x_api_strings.c: 314:   strcpy(pPalErrorString, "Invalid Command Error");
[e ( _strcpy (2 , _pPalErrorString :s 28C ]
"316
[; ;vl53/core/vl53l0x_api_strings.c: 316:  break;
[e $U 45  ]
"317
[; ;vl53/core/vl53l0x_api_strings.c: 317:  case ((VL53L0X_Error) - 40):
[e :U 62 ]
"318
[; ;vl53/core/vl53l0x_api_strings.c: 318:   strcpy(pPalErrorString, "Division by zero Error");
[e ( _strcpy (2 , _pPalErrorString :s 29C ]
"320
[; ;vl53/core/vl53l0x_api_strings.c: 320:  break;
[e $U 45  ]
"321
[; ;vl53/core/vl53l0x_api_strings.c: 321:  case ((VL53L0X_Error) - 50):
[e :U 63 ]
"322
[; ;vl53/core/vl53l0x_api_strings.c: 322:   strcpy(pPalErrorString, "Reference Spad Init Error");
[e ( _strcpy (2 , _pPalErrorString :s 30C ]
"324
[; ;vl53/core/vl53l0x_api_strings.c: 324:  break;
[e $U 45  ]
"325
[; ;vl53/core/vl53l0x_api_strings.c: 325:  case ((VL53L0X_Error) - 99):
[e :U 64 ]
"326
[; ;vl53/core/vl53l0x_api_strings.c: 326:   strcpy(pPalErrorString, "Not implemented error");
[e ( _strcpy (2 , _pPalErrorString :s 31C ]
"328
[; ;vl53/core/vl53l0x_api_strings.c: 328:  break;
[e $U 45  ]
"330
[; ;vl53/core/vl53l0x_api_strings.c: 330:  default:
[e :U 65 ]
"331
[; ;vl53/core/vl53l0x_api_strings.c: 331:   strcpy(pPalErrorString, "Unknown Error Code");
[e ( _strcpy (2 , _pPalErrorString :s 32C ]
"333
[; ;vl53/core/vl53l0x_api_strings.c: 333:  }
}
[e $U 45  ]
[e :U 46 ]
[e [\ -> _PalErrorCode `i , $ -> -> -> 0 `i `c `i 47
 , $ -> -> -U -> 1 `i `c `i 48
 , $ -> -> -U -> 2 `i `c `i 49
 , $ -> -> -U -> 3 `i `c `i 50
 , $ -> -> -U -> 4 `i `c `i 51
 , $ -> -> -U -> 5 `i `c `i 52
 , $ -> -> -U -> 12 `i `c `i 53
 , $ -> -> -U -> 6 `i `c `i 54
 , $ -> -> -U -> 7 `i `c `i 55
 , $ -> -> -U -> 8 `i `c `i 56
 , $ -> -> -U -> 9 `i `c `i 57
 , $ -> -> -U -> 10 `i `c `i 58
 , $ -> -> -U -> 11 `i `c `i 59
 , $ -> -> -U -> 20 `i `c `i 60
 , $ -> -> -U -> 30 `i `c `i 61
 , $ -> -> -U -> 40 `i `c `i 62
 , $ -> -> -U -> 50 `i `c `i 63
 , $ -> -> -U -> 99 `i `c `i 64
 65 ]
[e :U 45 ]
"335
[; ;vl53/core/vl53l0x_api_strings.c: 335:  (void)0;
[e -> 0 `i ]
"336
[; ;vl53/core/vl53l0x_api_strings.c: 336:  return Status;
[e ) _Status ]
[e $UE 44  ]
"337
[; ;vl53/core/vl53l0x_api_strings.c: 337: }
[e :UE 44 ]
}
[a 22C 84 105 109 101 32 111 117 116 32 101 114 114 111 114 0 ]
[a 18C 73 110 118 97 108 105 100 32 112 97 114 97 109 101 116 101 114 115 32 101 114 114 111 114 0 ]
[a 21C 82 97 110 103 101 32 101 114 114 111 114 0 ]
[a 23C 77 111 100 101 32 110 111 116 32 115 117 112 112 111 114 116 101 100 32 101 114 114 111 114 0 ]
[a 19C 78 111 116 32 115 117 112 112 111 114 116 101 100 32 101 114 114 111 114 0 ]
[a 31C 78 111 116 32 105 109 112 108 101 109 101 110 116 101 100 32 101 114 114 111 114 0 ]
[a 16C 77 105 110 32 99 108 105 112 112 101 100 32 101 114 114 111 114 0 ]
[a 17C 85 110 100 101 102 105 110 101 100 32 101 114 114 111 114 0 ]
[a 30C 82 101 102 101 114 101 110 99 101 32 83 112 97 100 32 73 110 105 116 32 69 114 114 111 114 0 ]
[a 29C 68 105 118 105 115 105 111 110 32 98 121 32 122 101 114 111 32 69 114 114 111 114 0 ]
[a 14C 78 111 32 69 114 114 111 114 0 ]
[a 15C 67 97 108 105 98 114 97 116 105 111 110 32 87 97 114 110 105 110 103 32 69 114 114 111 114 0 ]
[a 27C 67 111 110 116 114 111 108 32 73 110 116 101 114 102 97 99 101 32 69 114 114 111 114 0 ]
[a 28C 73 110 118 97 108 105 100 32 67 111 109 109 97 110 100 32 69 114 114 111 114 0 ]
[a 5C 86 76 53 51 76 48 88 32 69 83 49 32 111 114 32 108 97 116 101 114 0 ]
[a 24C 66 117 102 102 101 114 32 116 111 111 32 115 109 97 108 108 0 ]
[a 9C 83 105 103 110 97 108 32 70 97 105 108 0 ]
[a 11C 80 104 97 115 101 32 70 97 105 108 0 ]
[a 12C 72 97 114 100 119 97 114 101 32 70 97 105 108 0 ]
[a 10C 77 105 110 32 82 97 110 103 101 32 70 97 105 108 0 ]
[a 8C 83 105 103 109 97 32 70 97 105 108 0 ]
[a 25C 71 80 73 79 32 110 111 116 32 101 120 105 115 116 105 110 103 0 ]
[a 13C 78 111 32 85 112 100 97 116 101 0 ]
[a 32C 85 110 107 110 111 119 110 32 69 114 114 111 114 32 67 111 100 101 0 ]
[a 7C 82 97 110 103 101 32 86 97 108 105 100 0 ]
[a 26C 71 80 73 79 32 102 117 110 99 116 32 110 111 116 32 115 117 112 112 111 114 116 101 100 0 ]
[a 20C 73 110 116 101 114 114 117 112 116 32 110 111 116 32 67 108 101 97 114 101 100 0 ]
[a 6C 86 76 53 51 76 48 88 0 ]
[a 4C 86 76 53 51 76 48 88 32 84 83 50 0 ]
[a 3C 86 76 53 51 76 48 88 32 84 83 49 0 ]
[a 2C 86 76 53 51 76 48 88 32 84 83 48 0 ]
[a 1C 0 ]
